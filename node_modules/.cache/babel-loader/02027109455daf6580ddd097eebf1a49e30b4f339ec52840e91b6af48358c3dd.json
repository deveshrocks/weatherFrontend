{"ast":null,"code":"var _jsxFileName = \"E:\\\\Publicis Sapient\\\\Front End\\\\weather\\\\src\\\\components\\\\TestPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TestPage = () => {\n  _s();\n  const [weatherData, setWeatherData] = useState([]);\n  useEffect(() => {\n    // Fetch weather data from the API\n    fetch('https://your-api-url.com/weather').then(response => response.json()).then(data => setWeatherData(data)).catch(error => console.error('Error:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: weatherData.map((data, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date: \", data.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Temperature Min: \", data.temp_min]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Temperature Max: \", data.temp_max]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Message: \", data.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Additional Message: \", data.additional_message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 7\n  }, this);\n};\n_s(TestPage, \"/WBsAESNl5X9UOGQ8x5/AmmeTCo=\");\n_c = TestPage;\nexport default TestPage;\nvar _c;\n$RefreshReg$(_c, \"TestPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TestPage","_s","weatherData","setWeatherData","fetch","then","response","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","date","temp_min","temp_max","message","additional_message","_c","$RefreshReg$"],"sources":["E:/Publicis Sapient/Front End/weather/src/components/TestPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst TestPage = () => {\r\n    const [weatherData, setWeatherData] = useState([]);\r\n  \r\n    useEffect(() => {\r\n      // Fetch weather data from the API\r\n      fetch('https://your-api-url.com/weather')\r\n        .then(response => response.json())\r\n        .then(data => setWeatherData(data))\r\n        .catch(error => console.error('Error:', error));\r\n    }, []);\r\n  \r\n    return (\r\n      <div>\r\n        <h1>Weather Forecast</h1>\r\n        <ul>\r\n          {weatherData.map((data, index) => (\r\n            <li key={index}>\r\n              <p>Date: {data.date}</p>\r\n              <p>Temperature Min: {data.temp_min}</p>\r\n              <p>Temperature Max: {data.temp_max}</p>\r\n              <p>Message: {data.message}</p>\r\n              <p>Additional Message: {data.additional_message}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  export default TestPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAElDC,SAAS,CAAC,MAAM;IACd;IACAO,KAAK,CAAC,kCAAkC,CAAC,CACtCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,cAAc,CAACK,IAAI,CAAC,CAAC,CAClCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC,CAAC;EACnD,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBjB,OAAA;MAAAa,QAAA,EACGV,WAAW,CAACe,GAAG,CAAC,CAACT,IAAI,EAAEU,KAAK,kBAC3BnB,OAAA;QAAAa,QAAA,gBACEb,OAAA;UAAAa,QAAA,GAAG,QAAM,EAACJ,IAAI,CAACW,IAAI;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxBjB,OAAA;UAAAa,QAAA,GAAG,mBAAiB,EAACJ,IAAI,CAACY,QAAQ;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvCjB,OAAA;UAAAa,QAAA,GAAG,mBAAiB,EAACJ,IAAI,CAACa,QAAQ;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvCjB,OAAA;UAAAa,QAAA,GAAG,WAAS,EAACJ,IAAI,CAACc,OAAO;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC9BjB,OAAA;UAAAa,QAAA,GAAG,sBAAoB,EAACJ,IAAI,CAACe,kBAAkB;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAL7CE,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACf,EAAA,CA3BED,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AA6BZ,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}